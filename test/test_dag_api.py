# coding: utf-8

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# coding: utf-8

"""
    Airflow API (Stable)

    Apache Airflow management API.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: dev@airflow.apache.org
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import airflow_client
from airflow_client.api.dag_api import DAGApi  # noqa: E501
from airflow_client.rest import ApiException


class TestDAGApi(unittest.TestCase):
    """DAGApi unit test stubs"""

    def setUp(self):
        self.api = airflow_client.api.dag_api.DAGApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_get_dag(self):
        """Test case for get_dag

        Get basic information about a DAG  # noqa: E501
        """
        pass

    def test_get_dag_details(self):
        """Test case for get_dag_details

        Get a simplified representation of DAG.  # noqa: E501
        """
        pass

    def test_get_dag_source(self):
        """Test case for get_dag_source

        Get source code using file token  # noqa: E501
        """
        pass

    def test_get_dags(self):
        """Test case for get_dags

        Get all DAGs  # noqa: E501
        """
        pass

    def test_get_task(self):
        """Test case for get_task

        Get simplified representation of a task.  # noqa: E501
        """
        pass

    def test_get_tasks(self):
        """Test case for get_tasks

        Get tasks for DAG  # noqa: E501
        """
        pass

    def test_patch_dag(self):
        """Test case for patch_dag

        Update a DAG  # noqa: E501
        """
        pass

    def test_post_clear_task_instances(self):
        """Test case for post_clear_task_instances

        Clears a set of task instances associated with the DAG for a specified date range.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
